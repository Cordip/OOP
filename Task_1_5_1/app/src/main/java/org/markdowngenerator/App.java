/*
 * This source file was generated by the Gradle 'init' task
 */
package org.markdowngenerator;

import java.util.Arrays;

import org.markdowngenerator.text.Quote;
import org.markdowngenerator.text.Text;

public class App {
    // public String getGreeting() {
    //     return "Hello World!";
    // }

    public static void main(String[] args) {

        Table.Builder tb = new Table.Builder()
            .withAlignments(Table.ALIGN_RIGHT, Table.ALIGN_LEFT, Table.ALIGN_CENTER)
            .withRowLimit(8)
            .addRow("Index", "Random", "SSSS");
        for (int i = 1; i <= 5; i++) {
            final var value = (int) (Math.random() * 10);
            if (value < 5) {
            tb.addRow(i, new Text.Bold(String.valueOf(value)));
            } else {
                tb.addRow(i, (int) (value));
            }
        }
        System.out.println(tb.build());
        try {
            Text.Builder txtbu = new Text.Builder()
                .setTextType(new Text.Code("as\nds"));
            System.out.println(txtbu.build());
        } catch (MarkdownException e) {
            System.err.println("try build" + e.toString());
        }
        Text.Builder txtbu = new Text.Code.Builder()
            .setStr("asdad");
        System.out.println(txtbu.build());

        System.out.println(new org.markdowngenerator.text.Heading("asd", 3));

        org.markdowngenerator.text.Heading shii = new org.markdowngenerator.text.Heading("asd", 3);
        System.out.println(shii.toString().equals("\n### asd\n"));

        List.Builder lb = new List.Builder()
            .add(new Text("asdas"))
            .add(new Text.Bold("asdsad"));
        System.out.println(lb.build());

        Link.Builder lib = new Link.Builder()
            .setText("asdasd")
            .setUrl("ddddd");

        System.out.println(lib.build());

        Image.Builder imgb = new Image.Builder()
            .setAlt("ddd")
            .setUrl("afasfa");

        System.out.println(imgb.build());

        
    }
    
}
